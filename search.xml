<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[《Spring实战》学习笔记（一）装配Bean]]></title>
      <url>%2F2017%2F02%2F25%2Fspring-action01%2F</url>
      <content type="text"><![CDATA[自动转配Bean创建可被发现的Bean 代码结构： 程序清单：12345package soundsystem;public interface CompactDisc &#123; void play();&#125; PS：@Component表明组件类1234567891011121314package soundsystem;import org.springframework.stereotype.Component;@Componentpublic class SgtPeppers implements CompactDisc&#123; private String title = "Sgt.Pepper's Lonely Hearts Club Bands"; private String artist = "The Beatles"; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; PS：@ComponentScan注解启用了组件扫描，如果没有其他配置的话，@ComponentScan默认会扫描与配置类相同的包以及它的子包。这里是基于Java的配置启用组件扫描12345678910package soundsystem;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;@Configuration@ComponentScanpublic class CDPlayerConfig &#123;&#125; 测试PS：@Autowired注解表明自动装配12345678910111213141516171819202122import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import soundsystem.CDPlayerConfig;import soundsystem.CompactDisc;import static org.junit.Assert.assertNotNull;@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes=CDPlayerConfig.class)public class CDPlayerTest &#123; @Autowired private CompactDisc cd; @Test public void cdShouldNotBeNull() &#123; assertNotNull(cd); &#125;&#125; 通过XML启用组件扫描代码结构 程序清单PS：applicationContext.xml 12345678&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt; &lt;!-- 启用组件扫描 --&gt; &lt;context:component-scan base-package="soundsystem"/&gt;&lt;/beans&gt; PS：一样12345package soundsystem;public interface CompactDisc &#123; void play();&#125; PS：一样1234567891011121314package soundsystem;import org.springframework.stereotype.Component;@Componentpublic class SgtPeppers implements CompactDisc&#123; private String title = "Sgt.Pepper's Lonely Hearts Club Bands"; private String artist = "The Beatles"; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; 测试PS：变为@ContextConfiguration(locations = { “classpath*:/applicationContext.xml”}) 1234567891011121314import static org.junit.Assert.assertNotNull;@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(locations = &#123; "classpath*:/applicationContext.xml"&#125;)public class CDPlayerTest &#123; @Autowired private CompactDisc cd; @Test public void cdShouldNotBeNull() &#123; assertNotNull(cd); &#125;&#125; 为组件扫描的bean命名（1）默认bean的ID为sgtPeppers 12345678910@Componentpublic class SgtPeppers implements CompactDisc&#123; private String title = "Sgt.Pepper's Lonely Hearts Club Bands"; private String artist = "The Beatles"; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; （2）bean的ID为Leo 12345678910@Component("Leo")public class SgtPeppers implements CompactDisc&#123; private String title = "Sgt.Pepper's Lonely Hearts Club Bands"; private String artist = "The Beatles"; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; （3）bean的ID为Leo 12345678910@Named("Leo")public class SgtPeppers implements CompactDisc&#123; private String title = "Sgt.Pepper's Lonely Hearts Club Bands"; private String artist = "The Beatles"; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; 设置组件扫描的基础包（1）扫描soundsystem 12345@Configuration@ComponentScan("soundsystem")public class CDPlayerConfig &#123;&#125; （2）扫描soundsystem,video 12345@Configuration@ComponentScan(basePackages=&#123;"soundsystem","video"&#125;)public class CDPlayerConfig &#123;&#125; （3）扫描CDPlayer类,DVDPlayer类所在的包 12345@Configuration@ComponentScan(basePackageClasses = &#123;CDPlayer.class,DVDPlayer.class&#125;)public class CDPlayerConfig &#123;&#125; 通过为bean添加注解实现自动装配代码结构 程序清单PS：任何方法都可以实现自动装配 12345678910111213141516171819202122232425262728package soundsystem;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;@Componentpublic class CDPlayer implements MediaPlayer &#123; private CompactDisc cd; @Autowired public CDPlayer(CompactDisc cd) &#123; this.cd = cd; &#125; @Autowired public void setCompactDisc(CompactDisc cd) &#123; this.cd = cd; &#125; @Autowired public void insertDisc(CompactDisc cd) &#123; this.cd = cd; &#125; public void play() &#123; cd.play(); &#125;&#125; PS：Java配置组件扫描12345678910package soundsystem;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;@Configuration@ComponentScanpublic class CDPlayerConfig &#123;&#125; 12345package soundsystem;public interface CompactDisc &#123; void play();&#125; 12345package soundsystem;public interface MediaPlayer &#123; public void play();&#125; 1234567891011121314151617package soundsystem;import org.springframework.stereotype.Component;/** * Created by adc333 on 2017/2/3. */@Componentpublic class SgtPeppers implements CompactDisc&#123; private String title = "hello"; private String artist = " world"; public void play() &#123; System.out.print(title+artist); &#125;&#125; 测试PS：控制台输出比较，这里简单输出hello world123456789101112131415161718192021222324252627282930313233343536373839import org.junit.Rule;import org.junit.Test;import org.junit.contrib.java.lang.system.StandardOutputStreamLog;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import soundsystem.CDPlayerConfig;import soundsystem.CompactDisc;import soundsystem.MediaPlayer;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertNotNull;@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes = CDPlayerConfig.class)public class CDPlayerTest &#123; @Rule public final StandardOutputStreamLog log = new StandardOutputStreamLog(); @Autowired private MediaPlayer player; @Autowired private CompactDisc cd; @Test public void cdShouldNotBeNull() &#123; assertNotNull(cd); &#125; @Test public void play() &#123; player.play(); assertEquals("hello world",log.getLog()); &#125;&#125; 通过Java代码装配bean创建配置类12345678package soundsystem;import org.springframework.context.annotation.Configuration;@Configurationpublic class CDPlayerConfig &#123;&#125; 声明简单的bean（1）默认bean的ID为sgtPeppers 12345678910111213package soundsystem;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class CDPlayerConfig &#123; @Bean public CompactDisc sgtPeppers() &#123; return new SgtPeppers(); &#125;&#125; （2）bean的ID为Leo 12345678910111213package soundsystem;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class CDPlayerConfig &#123; @Bean(name="Leo") public CompactDisc sgtPeppers() &#123; return new SgtPeppers(); &#125;&#125; 借助JavaConfig实现注入123456789101112131415161718package soundsystem;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class CDPlayerConfig &#123; @Bean public CompactDisc sgtPeppers() &#123; return new SgtPeppers(); &#125; @Bean public CDPlayer cdPlayer(CompactDisc compactDisc) &#123; return new CDPlayer(compactDisc); &#125;&#125; 测试代码结构程序清单1234567891011121314151617181920212223242526package soundsystem;import org.springframework.beans.factory.annotation.Autowired;public class CDPlayer implements MediaPlayer &#123; private CompactDisc cd; @Autowired public CDPlayer(CompactDisc cd) &#123; this.cd = cd; &#125; @Autowired public void setCompactDisc(CompactDisc cd) &#123; this.cd = cd; &#125; @Autowired public void insertDisc(CompactDisc cd) &#123; this.cd = cd; &#125; public void play() &#123; cd.play(); &#125;&#125; 123456789101112131415161718package soundsystem;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class CDPlayerConfig &#123; @Bean public CompactDisc sgtPeppers() &#123; return new SgtPeppers(); &#125; @Bean public CDPlayer cdPlayer(CompactDisc compactDisc) &#123; return new CDPlayer(compactDisc); &#125;&#125; 12345package soundsystem;public interface CompactDisc &#123; void play();&#125; 12345package soundsystem;public interface MediaPlayer &#123; public void play();&#125; 1234567891011package soundsystem;public class SgtPeppers implements CompactDisc&#123; private String title = "hello"; private String artist = " world"; public void play() &#123; System.out.print(title+artist); &#125;&#125; 测试1234567891011121314151617181920212223242526272829303132333435363738import org.junit.Rule;import org.junit.Test;import org.junit.contrib.java.lang.system.StandardOutputStreamLog;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import soundsystem.CDPlayerConfig;import soundsystem.CompactDisc;import soundsystem.MediaPlayer;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertNotNull;@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes = CDPlayerConfig.class)public class CDPlayerTest &#123; @Rule public final StandardOutputStreamLog log = new StandardOutputStreamLog(); @Autowired private MediaPlayer player; @Autowired private CompactDisc cd; @Test public void cdShouldNotBeNull() &#123; assertNotNull(cd); &#125; @Test public void play() &#123; player.play(); assertEquals("hello world",log.getLog()); &#125;&#125; 通过XML装配bean声明一个简单的bean（1）bean的ID为soundsystem.SgtPeppers#0，如果声明了另外一个SgtPeppers，同样没有明确标识，bean的ID为soundsystem.SgtPeppers#1 1&lt;bean class="soundsystem.SgtPeppers"/&gt; （2）bean的ID为compactDisc 1&lt;bean id="compactDisc" class="soundsystem.SgtPeppers"/&gt; 借助构造器注入初始化bean构造器注入bean引用（1） 123&lt;bean id="cdPlayer" class="soundsystem.CDPlayer"&gt; &lt;constructor-arg ref="compactDisc"/&gt;&lt;/bean&gt; （2） 1&lt;bean id="cdPlayer" class="soundsystem.CDPlayer" c:cd-ref="compactDisc" /&gt; 将字面量注入到构造器中123456789101112131415package soundsystem;public class BlankDisc implements CompactDisc &#123; private String title; private String artist; public BlankDisc(String title, String artist) &#123; this.title = title; this.artist = artist; &#125; public void play() &#123; System.out.println("Playing "+title+" by "+artist); &#125;&#125; （1）1234&lt;bean id="compactDisc" class="soundsystem.BlankDisc"&gt; &lt;constructor-arg value="hello"/&gt; &lt;constructor-arg value="world"/&gt;&lt;/bean&gt; （2） 123&lt;bean id="compactDisc" class="soundsystem.BlankDisc" c:_title="hello" c:_artist="world" /&gt; 装配集合12345678910111213141516171819202122232425package soundsystem;import java.util.List;/** * Created by adc333 on 2017/2/3. */public class BlankDisc implements CompactDisc &#123; private String title; private String artist; private List&lt;String&gt; tracks; public BlankDisc(String title, String artist, List&lt;String&gt; tracks) &#123; this.title = title; this.artist = artist; this.tracks = tracks; &#125; public void play() &#123; System.out.println("Playing "+title+" by "+artist); for(String track : tracks) &#123; System.out.println("-Track: "+track); &#125; &#125;&#125; 12345678910111213&lt;bean id="compactDisc" class="soundsystem.BlankDisc"&gt; &lt;constructor-arg value="hello"/&gt; &lt;constructor-arg value="world"/&gt; &lt;constructor-arg&gt; &lt;list&gt; &lt;value&gt;11111&lt;/value&gt; &lt;value&gt;22222&lt;/value&gt; &lt;value&gt;33333&lt;/value&gt; &lt;value&gt;44444&lt;/value&gt; &lt;value&gt;55555&lt;/value&gt; &lt;list&gt; &lt;/constructor-arg&gt;&lt;/bean&gt; 设置属性12345678910111213141516package soundsystem;import org.springframework.beans.factory.annotation.Autowired;public class CDPlayer implements MediaPlayer &#123; private CompactDisc cd; @Autowired public void setCompactDisc(CompactDisc cd) &#123; this.cd = cd; &#125; public void play() &#123; cd.play(); &#125;&#125; （1）123&lt;bean id="cdPlayer" class="soundsystem.CDPlayer"&gt; &lt;property name="compactDisc" ref="compactDisc"/&gt;&lt;/bean&gt; （2） 1&lt;bean id=&quot;cdPlayer&quot; class=&quot;soundsystem.CDPlayer&quot; p:compactDisc-ref=&quot;compactDisc&quot; /&gt; 将字面量注入到属性中12345678910111213141516171819202122232425262728package soundsystem;import java.util.List;public class BlankDisc implements CompactDisc &#123; private String title; private String artist; private List&lt;String&gt; tracks; public void setTitle(String title) &#123; this.title = title; &#125; public void setArtist(String artist) &#123; this.artist = artist; &#125; public void setTracks(List&lt;String&gt; tracks) &#123; this.tracks = tracks; &#125; public void play() &#123; System.out.println("Playing "+title+" by "+artist); for(String track : tracks) &#123; System.out.println("-Track: "+track); &#125; &#125;&#125; （1）12345678910111213&lt;bean id="compactDisc" class="soundsystem.BlankDisc"&gt; &lt;property name="title" value="hello"/&gt; &lt;property name="artist" value="world"/&gt; &lt;property name="tracks"&gt; &lt;list&gt; &lt;value&gt;11111&lt;/value&gt; &lt;value&gt;22222&lt;/value&gt; &lt;value&gt;33333&lt;/value&gt; &lt;value&gt;44444&lt;/value&gt; &lt;value&gt;55555&lt;/value&gt; &lt;list&gt; &lt;/property&gt;&lt;/bean&gt; （2） 1234567891011&lt;bean id="compactDisc" class="soundsystem.BlankDisc" p:title="hello" p:artist="world"&gt; &lt;property name="tracks"&gt; &lt;list&gt; &lt;value&gt;11111&lt;/value&gt; &lt;value&gt;22222&lt;/value&gt; &lt;value&gt;33333&lt;/value&gt; &lt;value&gt;44444&lt;/value&gt; &lt;value&gt;55555&lt;/value&gt; &lt;list&gt; &lt;/property&gt;&lt;/bean&gt; 测试代码结构 程序清单12345678910111213141516171819202122232425262728package soundsystem;import java.util.List;public class BlankDisc implements CompactDisc &#123; private String title; private String artist; private List&lt;String&gt; tracks; public void setTitle(String title) &#123; this.title = title; &#125; public void setArtist(String artist) &#123; this.artist = artist; &#125; public void setTracks(List&lt;String&gt; tracks) &#123; this.tracks = tracks; &#125; public void play() &#123; System.out.print(title+artist); for(String track : tracks) &#123; System.out.print(track); &#125; &#125;&#125; 12345678910111213141516package soundsystem;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;public class CDPlayer implements MediaPlayer &#123; private CompactDisc cd; public CDPlayer(CompactDisc cd) &#123; this.cd = cd; &#125; public void play() &#123; cd.play(); &#125;&#125; 12345package soundsystem;public interface CompactDisc &#123; void play();&#125; 12345package soundsystem;public interface MediaPlayer &#123; public void play();&#125; applicationContext.xml： 123456789101112131415161718192021222324&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt; &lt;!-- 设置属性注入bean --&gt; &lt;bean id="compactDisc" class="soundsystem.BlankDisc"&gt; &lt;property name="title" value="hello"/&gt; &lt;property name="artist" value="world"/&gt; &lt;property name="tracks"&gt; &lt;list&gt; &lt;value&gt;11111&lt;/value&gt; &lt;value&gt;22222&lt;/value&gt; &lt;value&gt;33333&lt;/value&gt; &lt;value&gt;44444&lt;/value&gt; &lt;value&gt;55555&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;/bean&gt; &lt;!-- 构造器注入bean --&gt; &lt;bean id="cdPlayer" class="soundsystem.CDPlayer"&gt; &lt;constructor-arg ref="compactDisc"/&gt; &lt;/bean&gt;&lt;/beans&gt; 测试123456789101112131415161718192021222324252627282930import org.junit.Rule;import org.junit.Test;import org.junit.contrib.java.lang.system.StandardOutputStreamLog;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.ApplicationContext;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import soundsystem.*;import static org.junit.Assert.assertEquals;@RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(locations = &#123; "classpath*:/applicationContext.xml"&#125;)public class CDPlayerTest &#123; @Autowired private ApplicationContext context; @Rule public final StandardOutputStreamLog log = new StandardOutputStreamLog(); @Test public void play() &#123; CompactDisc compactDisc = (CompactDisc)context.getBean(BlankDisc.class); MediaPlayer cdPlayer = (MediaPlayer)context.getBean(CDPlayer.class); cdPlayer.play(); assertEquals("helloworld1111122222333334444455555",log.getLog()); &#125;&#125;]]></content>
    </entry>

    
  
  
</search>
